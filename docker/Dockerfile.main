ARG ARCH=
FROM ${ARCH}debian:bullseye
ARG VERSION=latest
ARG BUILD_DATE=
ARG VCS_REF=

## Add APT 'contrib' repository
RUN sed -i 's/main/main contrib/' /etc/apt/sources.list

## General dependencies
RUN apt-get update && apt-get install -y          \
cmake build-essential pkg-config git              \
apt-utils libssl-dev libzmq5 libzmq3-dev          \
libcurl4-openssl-dev libtclap-dev libscrypt-dev   \
python3 python3-pip gcc-9 g++-9                   \
dh-make dpkg-dev debhelper devscripts             \
libboost-all-dev emacs-nox vim wget               \
libsqlite3-dev libpq-dev odb libodb-dev           \
libodb-pgsql-dev libodb-pgsql-2.4                 \
libodb-sqlite-2.4 libodb-sqlite-dev libodb-boost-dev

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2
RUN pip3 install pyzmq

## we mount leosac source dir in read only
VOLUME /usr/src/leosac
ADD . /usr/src/leosac

RUN (cd /usr/src/leosac/python && pip3 install -e .)

VOLUME /tmp/leosac

RUN (mkdir -p /tmp/leosac/build && cd /tmp/leosac/build      && \
cmake -DCMAKE_BUILD_TYPE=Release                  \
-DCMAKE_INSTALL_PREFIX=/usr/local                 \
-DZMQPP_BUILD_STATIC=0                            \
-DZMQPP_LIBZMQ_CMAKE=0                            \
/usr/src/leosac                                && \
make -j4                                       && \
make install)

# Create DEB
RUN if [ -n "$VCS_REF"] ; then bash /usr/src/leosac/docker_scripts/makepkg.sh ; fi

RUN mkdir -p /etc/leosac/config
VOLUME /etc/leosac/config

ADD cfg/factory/docker.xml /etc/leosac/config/config.xml

# Container config
CMD [""]
ENTRYPOINT ["leosac", "-k", "/etc/leosac/config/config.xml"]
EXPOSE 8888
