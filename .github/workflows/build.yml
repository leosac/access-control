name: Build
on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Update packages
        run: apt-get --qq update && apt-get -qq upgrade
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: >
          apt-get install -qq cmake build-essential pkg-config
          apt-utils libssl-dev libzmq5 libzmq3-dev
          libcurl4-openssl-dev libtclap-dev libscrypt-dev
          python3 python3-pip gcc-9 g++-9 git
          libboost-all-dev libgtest-dev
          libsqlite3-dev libpq-dev odb libodb-dev
          libodb-pgsql-dev libodb-pgsql-2.4
          libodb-sqlite-2.4 libodb-sqlite-dev libodb-boost-dev
      - run: mkdir build
      - name: Configure
        working-directory: build
        run: cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local
      - name: Build
        working-directory: build
        run: make -j3
      - name: Build
        if: success()
        run: |
          docker buildx build --tag maxhy/leosac:edge \
            --platform linux/amd64 \
            --build-arg VERSION=edge \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            --output "type=docker,name=maxhy/leosac:edge" \
            -f docker/Dockerfile.main .
      - run: mkdir build
      - name: Run linux/amd64
        if: success()
        run: docker run --entrypoint=/bin/bash --platform linux/amd64 -v "${GITHUB_WORKSPACE}/build:/tmp/leosac" maxhy/leosac:edge -c "cp /usr/src/leosac/leosac_*.deb /tmp/leosac"
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: Deb files
          path: build/*.deb
